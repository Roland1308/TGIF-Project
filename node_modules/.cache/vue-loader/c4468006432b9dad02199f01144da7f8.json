{"remainingRequest":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\src\\App.vue","mtime":1579188789356},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <appheader></appheader>\n    <div id=\"progressBar\" v-html=\"loadBar\" v-if=\"showBar\"></div>\n    <router-view\n      :membersHouse=\"membersHouse\"\n      :membersSenate=\"membersSenate\"\n      :statisticsSenate=\"statisticsSenate\"\n      :statisticsHouse=\"statisticsHouse\"\n      :leastMembersSenate=\"leastMembersSenate\"\n      :mostMembersSenate=\"mostMembersSenate\"\n      :leastMembersHouse=\"leastMembersHouse\"\n      :mostMembersHouse=\"mostMembersHouse\"\n      :leastMembersSenateParty=\"leastMembersSenateParty\"\n      :mostMembersSenateParty=\"mostMembersSenateParty\"\n      :leastMembersHouseParty=\"leastMembersHouseParty\"\n      :mostMembersHouseParty=\"mostMembersHouseParty\"\n      :statesSenate=\"statesSenate\"\n      :statesHouse=\"statesHouse\"\n    ></router-view>\n    <appfooter></appfooter>\n  </div>\n</template>\n\n<script>\nimport appheader from \"./components/header.vue\";\nimport appfooter from \"./components/footer.vue\";\n\nexport default {\n  name: \"app\",\n  components: {\n    appheader,\n    appfooter\n  },\n  data() {\n    return {\n      membersSenate: \"\",\n      membersHouse: \"\",\n      statisticsSenate: {},\n      statisticsHouse: {},\n      leastMembersSenate: {},\n      mostMembersSenate: {},\n      leastMembersHouse: {},\n      mostMembersHouse: {},\n      leastMembersSenateParty: {},\n      mostMembersSenateParty: {},\n      leastMembersHouseParty: {},\n      mostMembersHouseParty: {},\n      statesSenate: {},\n      statesHouse: {},\n      statistics: {},\n      showBar: true,\n      loadBar: \"\"\n    };\n  },\n\n  created() {\n    this.readData();\n  },\n\n  methods: {\n    async readData() {\n      const decoder = new TextDecoder(\"utf-8\");\n      let response = await fetch(\n        \"https://api.propublica.org/congress/v1/113/senate/members.json\",\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\n          }\n        }\n      );\n      let length = response.headers.get(\"Content-Length\");\n      if (!length) {\n        // something was wrong with response, just give up\n        return await response.arrayBuffer();\n      }\n      let array = new Uint8Array(length);\n      let at = 0; // to index into the array\n      let reader = response.body.getReader();\n      for (;;) {\n        let { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        array.set(value, at);\n        at += value.length;\n        let progBar = (at / length).toFixed(2) * 100;\n        this.showBar = progBar < 100;\n        this.loadBar = `\n            <div\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\n                 background: repeating-linear-gradient(\n                  45deg,\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}),\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 20px\n                ); color: white; text-align: center;\"\n              >\n                Loading...\n              </div>`;\n      }\n      let json = JSON.parse(decoder.decode(array));\n      this.membersSenate = json.results[0].members;\n      this.fillStatistics(this.membersSenate);\n      this.statisticsSenate = this.statistics;\n      this.leastMembersSenate = this.leastMembers;\n      this.mostMembersSenate = this.mostMembers.reverse();\n      this.leastMostParty(this.membersSenate);\n      this.leastMembersSenateParty = this.leastMembers;\n      this.mostMembersSenateParty = this.mostMembers.reverse();\n      this.createDropdown(this.membersSenate);\n      this.statesSenate = this.states;\n\n      response = await fetch(\n        \"https://api.propublica.org/congress/v1/113/house/members.json\",\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\n          }\n        }\n      );\n      length = response.headers.get(\"Content-Length\");\n      if (!length) {\n        // something was wrong with response, just give up\n        return await response.arrayBuffer();\n      }\n      array = new Uint8Array(length);\n      at = 0; // to index into the array\n      reader = response.body.getReader();\n      for (;;) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        array.set(value, at);\n        at += value.length;\n        let progBar = (at / length).toFixed(2) * 100;\n        this.showBar = progBar < 100;\n        this.loadBar = `\n            <div\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\n                 background: repeating-linear-gradient(\n                  45deg,\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}),\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 20px\n                ); color: white; text-align: center;\"\n              >\n                Loading...\n              </div>`;\n      }\n      json = JSON.parse(decoder.decode(array));\n      this.membersHouse = json.results[0].members;\n      this.fillStatistics(this.membersHouse);\n      this.statisticsHouse = this.statistics;\n      this.leastMembersHouse = this.leastMembers;\n      this.mostMembersHouse = this.mostMembers.reverse();\n      this.leastMostParty(this.membersHouse);\n      this.leastMembersHouseParty = this.leastMembers;\n      this.mostMembersHouseParty = this.mostMembers.reverse();\n      this.createDropdown(this.membersHouse);\n      this.statesHouse = this.states;\n    },\n\n    //Create the options for the states' dropdown filtering menu\n    createDropdown(members) {\n      this.states = [\n        ...new Set(members.map(member => member.state))\n      ].sort();\n      return this.states;\n    },\n\n    //Fill the arrays \"statistics\"\n    fillStatistics(members) {\n      this.statistics = {\n        NrOfDemo: 0,\n        NrOfRepu: 0,\n        NrOfInde: 0,\n        AvgOfDemo: 0,\n        AvgOfRepu: 0,\n        AvgOfInde: 0,\n        TotalReps: 0,\n        TotalPerc: 0\n      };\n      this.SumVotesD = 0;\n      this.SumVotesR = 0;\n      this.SumVotesI = 0;\n      members.forEach(person => {\n        switch (person.party) {\n          case \"D\":\n            this.statistics.NrOfDemo++;\n            this.SumVotesD += person.votes_with_party_pct;\n            break;\n          case \"R\":\n            this.statistics.NrOfRepu++;\n            this.SumVotesR += person.votes_with_party_pct;\n            break;\n          case \"I\":\n            this.statistics.NrOfInde++;\n            this.SumVotesI += person.votes_with_party_pct;\n            break;\n        }\n      });\n      this.statistics.AvgOfDemo =\n        this.statistics.NrOfDemo == 0\n          ? 0\n          : Math.round((this.SumVotesD / this.statistics.NrOfDemo) * 100) / 100;\n      this.statistics.AvgOfRepu =\n        this.statistics.NrOfRepu == 0\n          ? 0\n          : Math.round((this.SumVotesR / this.statistics.NrOfRepu) * 100) / 100;\n      this.statistics.AvgOfInde =\n        this.statistics.NrOfInde == 0\n          ? 0\n          : Math.round((this.SumVotesI / this.statistics.NrOfInde) * 100) / 100;\n      this.statistics.TotalReps =\n        this.statistics.NrOfDemo +\n        this.statistics.NrOfRepu +\n        this.statistics.NrOfInde;\n      this.statistics.TotalPerc =\n        Math.round(\n          ((this.SumVotesD + this.SumVotesR + this.SumVotesI) /\n            this.statistics.TotalReps) *\n            100\n        ) / 100;\n      //Create Least and Most arrays\n      let sortedMembers = members\n        .slice()\n        .sort((a, b) => a.missed_votes_pct - b.missed_votes_pct);\n      let len = sortedMembers.length;\n      let tenPercent = Math.round(len / 10) - 1;\n      let endLeast = tenPercent;\n      let endMost = len - 1 - tenPercent;\n      //Check for repetitive Least\n      let lastLeast = sortedMembers[tenPercent];\n      for (let f = tenPercent; f < len; f++) {\n        let nextLeast = sortedMembers[f];\n        if (nextLeast.missed_votes_pct === lastLeast.missed_votes_pct) {\n          endLeast++;\n        } else {\n          break;\n        }\n      }\n      //Check for repetitive Most\n      let lastMost = sortedMembers[len - 1 - tenPercent];\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\n        let nextMost = sortedMembers[f];\n        if (nextMost.missed_votes_pct === lastMost.missed_votes_pct) {\n          endMost--;\n        } else {\n          break;\n        }\n      }\n      this.leastMembers = sortedMembers.slice(0, endLeast);\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\n      return [this.statistics, this.leastMembers, this.mostMembers];\n    },\n\n    //Create Least and Most for Party\n    leastMostParty(members) {\n      let sortedMembers = members\n        .slice()\n        .sort((a, b) => a.votes_with_party_pct - b.votes_with_party_pct);\n      let len = sortedMembers.length;\n      let tenPercent = Math.round(len / 10) - 1;\n      let endLeast = tenPercent;\n      let endMost = len - 1 - tenPercent;\n      //Check for repetitive Least\n      let lastLeast = sortedMembers[tenPercent];\n      for (let f = tenPercent; f < len; f++) {\n        let nextLeast = sortedMembers[f];\n        if (nextLeast.votes_with_party_pct === lastLeast.votes_with_party_pct) {\n          endLeast++;\n        } else {\n          break;\n        }\n      }\n      //Check for repetitive Most\n      let lastMost = sortedMembers[len - 1 - tenPercent];\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\n        let nextMost = sortedMembers[f];\n        if (nextMost.votes_with_party_pct === lastMost.votes_with_party_pct) {\n          endMost--;\n        } else {\n          break;\n        }\n      }\n      this.leastMembers = sortedMembers.slice(0, endLeast);\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\n      return [this.leastMembers, this.mostMembers];\n    }\n  }\n};\n</script>\n\n<style>\n.col-8,\n.principale {\n  padding-top: 20px;\n}\ndiv > img {\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n}\n.nav-link {\n  background-color: rgb(221, 221, 221);\n}\n.dropdown-item.router-link-exact-active {\n  color: white !important;\n  background-color: #007bff !important;\n}\n.centered,\nth:nth-child(n + 2),\ntd:nth-child(n + 2) {\n  text-align: center;\n}\n#Foot_at_Glance,\n.normal_foot {\n  background-color: rgb(134, 185, 255);\n  border-top: 2px black solid;\n}\n.normal_foot,\n.error_foot {\n  text-align: center;\n  font-weight: bold;\n}\n.error_foot {\n    background-color: rgb(230, 116, 116);\n}\nh2 {\n  font-size: 1.4rem !important;\n}\nh3 {\n  font-size: 1rem !important;\n}\nbutton,\nselect {\n  margin-bottom: 10px !important;\n}\n.fas,\nlabel,\ninput:hover {\n  cursor: pointer !important;\n}\ninput {\n  margin-left: 4px !important;\n  margin-right: 8px !important;\n\n}\n.fa-sort {\n  color: rgb(155, 155, 155) !important;\n}\n</style>\n"]}]}