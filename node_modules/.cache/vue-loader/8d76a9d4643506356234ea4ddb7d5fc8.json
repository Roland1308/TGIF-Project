{"remainingRequest":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\src\\components\\senateparty.vue?vue&type=template&id=7c811a10&","dependencies":[{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\src\\components\\senateparty.vue","mtime":1579169283336},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Vue CLI version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}