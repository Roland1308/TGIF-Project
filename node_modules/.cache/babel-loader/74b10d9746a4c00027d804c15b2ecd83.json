{"remainingRequest":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\src\\App.vue","mtime":1579188789356},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\tgif vue cli version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,gBAAA,EAAA,EAHA;AAIA,MAAA,eAAA,EAAA,EAJA;AAKA,MAAA,kBAAA,EAAA,EALA;AAMA,MAAA,iBAAA,EAAA,EANA;AAOA,MAAA,iBAAA,EAAA,EAPA;AAQA,MAAA,gBAAA,EAAA,EARA;AASA,MAAA,uBAAA,EAAA,EATA;AAUA,MAAA,sBAAA,EAAA,EAVA;AAWA,MAAA,sBAAA,EAAA,EAXA;AAYA,MAAA,qBAAA,EAAA,EAZA;AAaA,MAAA,YAAA,EAAA,EAbA;AAcA,MAAA,WAAA,EAAA,EAdA;AAeA,MAAA,UAAA,EAAA,EAfA;AAgBA,MAAA,OAAA,EAAA,IAhBA;AAiBA,MAAA,OAAA,EAAA;AAjBA,KAAA;AAmBA,GA1BA;AA4BA,EAAA,OA5BA,qBA4BA;AACA,SAAA,QAAA;AACA,GA9BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,OAFA,GAEA,IAAA,WAAA,CAAA,OAAA,CAFA;AAAA;AAAA,uBAGA,KAAA,CACA,gEADA,EAEA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,OAAA,EAAA;AACA,iCAAA;AADA;AAFA,iBAFA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAYA,gBAAA,MAZA,GAYA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,CAZA;;AAAA,oBAaA,MAbA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAeA,QAAA,CAAA,WAAA,EAfA;;AAAA;AAAA;;AAAA;AAiBA,gBAAA,KAjBA,GAiBA,IAAA,UAAA,CAAA,MAAA,CAjBA;AAkBA,gBAAA,EAlBA,GAkBA,CAlBA,EAkBA;;AACA,gBAAA,MAnBA,GAmBA,QAAA,CAAA,IAAA,CAAA,SAAA,EAnBA;;AAAA;AAAA;AAAA,uBAqBA,MAAA,CAAA,IAAA,EArBA;;AAAA;AAAA;AAqBA,gBAAA,IArBA,QAqBA,IArBA;AAqBA,gBAAA,KArBA,QAqBA,KArBA;;AAAA,qBAsBA,IAtBA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAyBA,gBAAA,KAAA,CAAA,GAAA,CAAA,KAAA,EAAA,EAAA;AACA,gBAAA,EAAA,IAAA,KAAA,CAAA,MAAA;AACA,gBAAA,OA3BA,GA2BA,CAAA,EAAA,GAAA,MAAA,EAAA,OAAA,CAAA,CAAA,IAAA,GA3BA;AA4BA,qBAAA,OAAA,GAAA,OAAA,GAAA,GAAA;AACA,qBAAA,OAAA,gEAEA,OAFA,0JAKA,MAAA,OAAA,OALA,eAKA,OAAA,OALA,eAKA,OACA,OANA,uCAOA,MAAA,OAAA,OAPA,eAOA,OAAA,OAPA,eAOA,OACA,OARA,4CASA,MAAA,OAAA,OATA,eASA,OAAA,OATA,eASA,OACA,OAVA,4CAWA,MAAA,OAAA,OAXA,eAWA,OAAA,OAXA,eAWA,OACA,OAZA;;AA7BA;AAAA;AAAA;;AAAA;AA+CA,gBAAA,IA/CA,GA+CA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CA/CA;AAgDA,qBAAA,aAAA,GAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA,OAAA;AACA,qBAAA,cAAA,CAAA,KAAA,aAAA;AACA,qBAAA,gBAAA,GAAA,KAAA,UAAA;AACA,qBAAA,kBAAA,GAAA,KAAA,YAAA;AACA,qBAAA,iBAAA,GAAA,KAAA,WAAA,CAAA,OAAA,EAAA;AACA,qBAAA,cAAA,CAAA,KAAA,aAAA;AACA,qBAAA,uBAAA,GAAA,KAAA,YAAA;AACA,qBAAA,sBAAA,GAAA,KAAA,WAAA,CAAA,OAAA,EAAA;AACA,qBAAA,cAAA,CAAA,KAAA,aAAA;AACA,qBAAA,YAAA,GAAA,KAAA,MAAA;AAzDA;AAAA,uBA2DA,KAAA,CACA,+DADA,EAEA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,OAAA,EAAA;AACA,iCAAA;AADA;AAFA,iBAFA,CA3DA;;AAAA;AA2DA,gBAAA,QA3DA;AAoEA,gBAAA,MAAA,GAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,CAAA;;AApEA,oBAqEA,MArEA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAuEA,QAAA,CAAA,WAAA,EAvEA;;AAAA;AAAA;;AAAA;AAyEA,gBAAA,KAAA,GAAA,IAAA,UAAA,CAAA,MAAA,CAAA;AACA,gBAAA,EAAA,GAAA,CAAA,CA1EA,CA0EA;;AACA,gBAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA,EAAA;;AA3EA;AAAA;AAAA,uBA6EA,MAAA,CAAA,IAAA,EA7EA;;AAAA;AAAA;AA6EA,gBAAA,KA7EA,SA6EA,IA7EA;AA6EA,gBAAA,MA7EA,SA6EA,KA7EA;;AAAA,qBA8EA,KA9EA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAiFA,gBAAA,KAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EAAA;AACA,gBAAA,EAAA,IAAA,MAAA,CAAA,MAAA;AACA,gBAAA,QAnFA,GAmFA,CAAA,EAAA,GAAA,MAAA,EAAA,OAAA,CAAA,CAAA,IAAA,GAnFA;AAoFA,qBAAA,OAAA,GAAA,QAAA,GAAA,GAAA;AACA,qBAAA,OAAA,gEAEA,QAFA,0JAKA,MAAA,OAAA,QALA,eAKA,OAAA,QALA,eAKA,OACA,QANA,uCAOA,MAAA,OAAA,QAPA,eAOA,OAAA,QAPA,eAOA,OACA,QARA,4CASA,MAAA,OAAA,QATA,eASA,OAAA,QATA,eASA,OACA,QAVA,4CAWA,MAAA,OAAA,QAXA,eAWA,OAAA,QAXA,eAWA,OACA,QAZA;;AArFA;AAAA;AAAA;;AAAA;AAuGA,gBAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA,qBAAA,YAAA,GAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA,OAAA;AACA,qBAAA,cAAA,CAAA,KAAA,YAAA;AACA,qBAAA,eAAA,GAAA,KAAA,UAAA;AACA,qBAAA,iBAAA,GAAA,KAAA,YAAA;AACA,qBAAA,gBAAA,GAAA,KAAA,WAAA,CAAA,OAAA,EAAA;AACA,qBAAA,cAAA,CAAA,KAAA,YAAA;AACA,qBAAA,sBAAA,GAAA,KAAA,YAAA;AACA,qBAAA,qBAAA,GAAA,KAAA,WAAA,CAAA,OAAA,EAAA;AACA,qBAAA,cAAA,CAAA,KAAA,YAAA;AACA,qBAAA,WAAA,GAAA,KAAA,MAAA;;AAjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoHA;AACA,IAAA,cArHA,0BAqHA,OArHA,EAqHA;AACA,WAAA,MAAA,GAAA,mBACA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,KAAA;AAAA,OAAA,CAAA,CADA,EAEA,IAFA,EAAA;AAGA,aAAA,KAAA,MAAA;AACA,KA1HA;AA4HA;AACA,IAAA,cA7HA,0BA6HA,OA7HA,EA6HA;AAAA;;AACA,WAAA,UAAA,GAAA;AACA,QAAA,QAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,CAFA;AAGA,QAAA,QAAA,EAAA,CAHA;AAIA,QAAA,SAAA,EAAA,CAJA;AAKA,QAAA,SAAA,EAAA,CALA;AAMA,QAAA,SAAA,EAAA,CANA;AAOA,QAAA,SAAA,EAAA,CAPA;AAQA,QAAA,SAAA,EAAA;AARA,OAAA;AAUA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,KAAA;AACA,eAAA,GAAA;AACA,YAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AACA,YAAA,KAAA,CAAA,SAAA,IAAA,MAAA,CAAA,oBAAA;AACA;;AACA,eAAA,GAAA;AACA,YAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AACA,YAAA,KAAA,CAAA,SAAA,IAAA,MAAA,CAAA,oBAAA;AACA;;AACA,eAAA,GAAA;AACA,YAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AACA,YAAA,KAAA,CAAA,SAAA,IAAA,MAAA,CAAA,oBAAA;AACA;AAZA;AAcA,OAfA;AAgoDA;;AACA,UAAA,aAAA,GAAA,OAAA,CACA,KADA,GAEA,IAFA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,gBAAA;AAAA,OAFA,CAAA;AAGA,UAAA,GAAA,GAAA,aAAA,CAAA,MAAA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,EAAA,IAAA,CAAA;AACA,UAAA,QAAA,GAAA,UAAA;AACA,UAAA,OAAA,GAAA,GAAA,GAAA,CAAA,GAAA,UAAA,CA3DA,CA4DA;;AACA,UAAA,SAAA,GAAA,aAAA,CAAA,UAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,UAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,aAAA,CAAA,CAAA,CAAA;;AACA,YAAA,SAAA,CAAA,gBAAA,KAAA,SAAA,CAAA,gBAAA,EAAA;AACA,UAAA,QAAA;AACA,SAFA,MAEA;AACA;AACA;AACA,OArEA,CAsEA;;;AACA,UAAA,QAAA,GAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA,CAAA;;AACA,WAAA,IAAA,EAAA,GAAA,GAAA,GAAA,CAAA,GAAA,UAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,aAAA,CAAA,EAAA,CAAA;;AACA,YAAA,QAAA,CAAA,gBAAA,KAAA,QAAA,CAAA,gBAAA,EAAA;AACA,UAAA,OAAA;AACA,SAFA,MAEA;AACA;AACA;AACA;;AACA,WAAA,YAAA,GAAA,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AACA,WAAA,WAAA,GAAA,aAAA,CAAA,KAAA,CAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AACA,aAAA,CAAA,KAAA,UAAA,EAAA,KAAA,YAAA,EAAA,KAAA,WAAA,CAAA;AACA,KAhNA;AAkNA;AACA,IAAA,cAnNA,0BAmNA,OAnNA,EAmNA;AACA,UAAA,aAAA,GAAA,OAAA,CACA,KADA,GAEA,IAFA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,CAAA,oBAAA;AAAA,OAFA,CAAA;AAGA,UAAA,GAAA,GAAA,aAAA,CAAA,MAAA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,EAAA,IAAA,CAAA;AACA,UAAA,QAAA,GAAA,UAAA;AACA,UAAA,OAAA,GAAA,GAAA,GAAA,CAAA,GAAA,UAAA,CAPA,CAQA;;AACA,UAAA,SAAA,GAAA,aAAA,CAAA,UAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,UAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,aAAA,CAAA,CAAA,CAAA;;AACA,YAAA,SAAA,CAAA,oBAAA,KAAA,SAAA,CAAA,oBAAA,EAAA;AACA,UAAA,QAAA;AACA,SAFA,MAEA;AACA;AACA;AACA,OAjBA,CAkBA;;;AACA,UAAA,QAAA,GAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA,CAAA;;AACA,WAAA,IAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,aAAA,CAAA,GAAA,CAAA;;AACA,YAAA,QAAA,CAAA,oBAAA,KAAA,QAAA,CAAA,oBAAA,EAAA;AACA,UAAA,OAAA;AACA,SAFA,MAEA;AACA;AACA;AACA;;AACA,WAAA,YAAA,GAAA,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AACA,WAAA,WAAA,GAAA,aAAA,CAAA,KAAA,CAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AACA,aAAA,CAAA,KAAA,YAAA,EAAA,KAAA,WAAA,CAAA;AACA;AAlPA;AAhCA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <appheader></appheader>\n    <div id=\"progressBar\" v-html=\"loadBar\" v-if=\"showBar\"></div>\n    <router-view\n      :membersHouse=\"membersHouse\"\n      :membersSenate=\"membersSenate\"\n      :statisticsSenate=\"statisticsSenate\"\n      :statisticsHouse=\"statisticsHouse\"\n      :leastMembersSenate=\"leastMembersSenate\"\n      :mostMembersSenate=\"mostMembersSenate\"\n      :leastMembersHouse=\"leastMembersHouse\"\n      :mostMembersHouse=\"mostMembersHouse\"\n      :leastMembersSenateParty=\"leastMembersSenateParty\"\n      :mostMembersSenateParty=\"mostMembersSenateParty\"\n      :leastMembersHouseParty=\"leastMembersHouseParty\"\n      :mostMembersHouseParty=\"mostMembersHouseParty\"\n      :statesSenate=\"statesSenate\"\n      :statesHouse=\"statesHouse\"\n    ></router-view>\n    <appfooter></appfooter>\n  </div>\n</template>\n\n<script>\nimport appheader from \"./components/header.vue\";\nimport appfooter from \"./components/footer.vue\";\n\nexport default {\n  name: \"app\",\n  components: {\n    appheader,\n    appfooter\n  },\n  data() {\n    return {\n      membersSenate: \"\",\n      membersHouse: \"\",\n      statisticsSenate: {},\n      statisticsHouse: {},\n      leastMembersSenate: {},\n      mostMembersSenate: {},\n      leastMembersHouse: {},\n      mostMembersHouse: {},\n      leastMembersSenateParty: {},\n      mostMembersSenateParty: {},\n      leastMembersHouseParty: {},\n      mostMembersHouseParty: {},\n      statesSenate: {},\n      statesHouse: {},\n      statistics: {},\n      showBar: true,\n      loadBar: \"\"\n    };\n  },\n\n  created() {\n    this.readData();\n  },\n\n  methods: {\n    async readData() {\n      const decoder = new TextDecoder(\"utf-8\");\n      let response = await fetch(\n        \"https://api.propublica.org/congress/v1/113/senate/members.json\",\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\n          }\n        }\n      );\n      let length = response.headers.get(\"Content-Length\");\n      if (!length) {\n        // something was wrong with response, just give up\n        return await response.arrayBuffer();\n      }\n      let array = new Uint8Array(length);\n      let at = 0; // to index into the array\n      let reader = response.body.getReader();\n      for (;;) {\n        let { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        array.set(value, at);\n        at += value.length;\n        let progBar = (at / length).toFixed(2) * 100;\n        this.showBar = progBar < 100;\n        this.loadBar = `\n            <div\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\n                 background: repeating-linear-gradient(\n                  45deg,\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}),\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 20px\n                ); color: white; text-align: center;\"\n              >\n                Loading...\n              </div>`;\n      }\n      let json = JSON.parse(decoder.decode(array));\n      this.membersSenate = json.results[0].members;\n      this.fillStatistics(this.membersSenate);\n      this.statisticsSenate = this.statistics;\n      this.leastMembersSenate = this.leastMembers;\n      this.mostMembersSenate = this.mostMembers.reverse();\n      this.leastMostParty(this.membersSenate);\n      this.leastMembersSenateParty = this.leastMembers;\n      this.mostMembersSenateParty = this.mostMembers.reverse();\n      this.createDropdown(this.membersSenate);\n      this.statesSenate = this.states;\n\n      response = await fetch(\n        \"https://api.propublica.org/congress/v1/113/house/members.json\",\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\n          }\n        }\n      );\n      length = response.headers.get(\"Content-Length\");\n      if (!length) {\n        // something was wrong with response, just give up\n        return await response.arrayBuffer();\n      }\n      array = new Uint8Array(length);\n      at = 0; // to index into the array\n      reader = response.body.getReader();\n      for (;;) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        array.set(value, at);\n        at += value.length;\n        let progBar = (at / length).toFixed(2) * 100;\n        this.showBar = progBar < 100;\n        this.loadBar = `\n            <div\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\n                 background: repeating-linear-gradient(\n                  45deg,\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}),\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 10px,\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\n          progBar}) 20px\n                ); color: white; text-align: center;\"\n              >\n                Loading...\n              </div>`;\n      }\n      json = JSON.parse(decoder.decode(array));\n      this.membersHouse = json.results[0].members;\n      this.fillStatistics(this.membersHouse);\n      this.statisticsHouse = this.statistics;\n      this.leastMembersHouse = this.leastMembers;\n      this.mostMembersHouse = this.mostMembers.reverse();\n      this.leastMostParty(this.membersHouse);\n      this.leastMembersHouseParty = this.leastMembers;\n      this.mostMembersHouseParty = this.mostMembers.reverse();\n      this.createDropdown(this.membersHouse);\n      this.statesHouse = this.states;\n    },\n\n    //Create the options for the states' dropdown filtering menu\n    createDropdown(members) {\n      this.states = [\n        ...new Set(members.map(member => member.state))\n      ].sort();\n      return this.states;\n    },\n\n    //Fill the arrays \"statistics\"\n    fillStatistics(members) {\n      this.statistics = {\n        NrOfDemo: 0,\n        NrOfRepu: 0,\n        NrOfInde: 0,\n        AvgOfDemo: 0,\n        AvgOfRepu: 0,\n        AvgOfInde: 0,\n        TotalReps: 0,\n        TotalPerc: 0\n      };\n      this.SumVotesD = 0;\n      this.SumVotesR = 0;\n      this.SumVotesI = 0;\n      members.forEach(person => {\n        switch (person.party) {\n          case \"D\":\n            this.statistics.NrOfDemo++;\n            this.SumVotesD += person.votes_with_party_pct;\n            break;\n          case \"R\":\n            this.statistics.NrOfRepu++;\n            this.SumVotesR += person.votes_with_party_pct;\n            break;\n          case \"I\":\n            this.statistics.NrOfInde++;\n            this.SumVotesI += person.votes_with_party_pct;\n            break;\n        }\n      });\n      this.statistics.AvgOfDemo =\n        this.statistics.NrOfDemo == 0\n          ? 0\n          : Math.round((this.SumVotesD / this.statistics.NrOfDemo) * 100) / 100;\n      this.statistics.AvgOfRepu =\n        this.statistics.NrOfRepu == 0\n          ? 0\n          : Math.round((this.SumVotesR / this.statistics.NrOfRepu) * 100) / 100;\n      this.statistics.AvgOfInde =\n        this.statistics.NrOfInde == 0\n          ? 0\n          : Math.round((this.SumVotesI / this.statistics.NrOfInde) * 100) / 100;\n      this.statistics.TotalReps =\n        this.statistics.NrOfDemo +\n        this.statistics.NrOfRepu +\n        this.statistics.NrOfInde;\n      this.statistics.TotalPerc =\n        Math.round(\n          ((this.SumVotesD + this.SumVotesR + this.SumVotesI) /\n            this.statistics.TotalReps) *\n            100\n        ) / 100;\n      //Create Least and Most arrays\n      let sortedMembers = members\n        .slice()\n        .sort((a, b) => a.missed_votes_pct - b.missed_votes_pct);\n      let len = sortedMembers.length;\n      let tenPercent = Math.round(len / 10) - 1;\n      let endLeast = tenPercent;\n      let endMost = len - 1 - tenPercent;\n      //Check for repetitive Least\n      let lastLeast = sortedMembers[tenPercent];\n      for (let f = tenPercent; f < len; f++) {\n        let nextLeast = sortedMembers[f];\n        if (nextLeast.missed_votes_pct === lastLeast.missed_votes_pct) {\n          endLeast++;\n        } else {\n          break;\n        }\n      }\n      //Check for repetitive Most\n      let lastMost = sortedMembers[len - 1 - tenPercent];\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\n        let nextMost = sortedMembers[f];\n        if (nextMost.missed_votes_pct === lastMost.missed_votes_pct) {\n          endMost--;\n        } else {\n          break;\n        }\n      }\n      this.leastMembers = sortedMembers.slice(0, endLeast);\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\n      return [this.statistics, this.leastMembers, this.mostMembers];\n    },\n\n    //Create Least and Most for Party\n    leastMostParty(members) {\n      let sortedMembers = members\n        .slice()\n        .sort((a, b) => a.votes_with_party_pct - b.votes_with_party_pct);\n      let len = sortedMembers.length;\n      let tenPercent = Math.round(len / 10) - 1;\n      let endLeast = tenPercent;\n      let endMost = len - 1 - tenPercent;\n      //Check for repetitive Least\n      let lastLeast = sortedMembers[tenPercent];\n      for (let f = tenPercent; f < len; f++) {\n        let nextLeast = sortedMembers[f];\n        if (nextLeast.votes_with_party_pct === lastLeast.votes_with_party_pct) {\n          endLeast++;\n        } else {\n          break;\n        }\n      }\n      //Check for repetitive Most\n      let lastMost = sortedMembers[len - 1 - tenPercent];\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\n        let nextMost = sortedMembers[f];\n        if (nextMost.votes_with_party_pct === lastMost.votes_with_party_pct) {\n          endMost--;\n        } else {\n          break;\n        }\n      }\n      this.leastMembers = sortedMembers.slice(0, endLeast);\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\n      return [this.leastMembers, this.mostMembers];\n    }\n  }\n};\n</script>\n\n<style>\n.col-8,\n.principale {\n  padding-top: 20px;\n}\ndiv > img {\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n}\n.nav-link {\n  background-color: rgb(221, 221, 221);\n}\n.dropdown-item.router-link-exact-active {\n  color: white !important;\n  background-color: #007bff !important;\n}\n.centered,\nth:nth-child(n + 2),\ntd:nth-child(n + 2) {\n  text-align: center;\n}\n#Foot_at_Glance,\n.normal_foot {\n  background-color: rgb(134, 185, 255);\n  border-top: 2px black solid;\n}\n.normal_foot,\n.error_foot {\n  text-align: center;\n  font-weight: bold;\n}\n.error_foot {\n    background-color: rgb(230, 116, 116);\n}\nh2 {\n  font-size: 1.4rem !important;\n}\nh3 {\n  font-size: 1rem !important;\n}\nbutton,\nselect {\n  margin-bottom: 10px !important;\n}\n.fas,\nlabel,\ninput:hover {\n  cursor: pointer !important;\n}\ninput {\n  margin-left: 4px !important;\n  margin-right: 8px !important;\n\n}\n.fa-sort {\n  color: rgb(155, 155, 155) !important;\n}\n</style>\n"],"sourceRoot":"src"}]}