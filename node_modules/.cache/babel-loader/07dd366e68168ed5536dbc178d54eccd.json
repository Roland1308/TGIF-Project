{"remainingRequest":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\src\\App.vue","mtime":1579682614443},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579682071238},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1579682038625},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579682071238},{"path":"C:\\Users\\Renato\\Desktop\\Ubiqum\\TGIF Project\\node_modules\\vue-loader\\lib\\index.js","mtime":1579682601152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <appheader></appheader>\r\n    <div id=\"progressBar\" v-html=\"loadBar\" v-if=\"showBar\"></div>\r\n    <router-view\r\n      :membersHouse=\"membersHouse\"\r\n      :membersSenate=\"membersSenate\"\r\n      :statisticsSenate=\"statisticsSenate\"\r\n      :statisticsHouse=\"statisticsHouse\"\r\n      :leastMembersSenate=\"leastMembersSenate\"\r\n      :mostMembersSenate=\"mostMembersSenate\"\r\n      :leastMembersHouse=\"leastMembersHouse\"\r\n      :mostMembersHouse=\"mostMembersHouse\"\r\n      :leastMembersSenateParty=\"leastMembersSenateParty\"\r\n      :mostMembersSenateParty=\"mostMembersSenateParty\"\r\n      :leastMembersHouseParty=\"leastMembersHouseParty\"\r\n      :mostMembersHouseParty=\"mostMembersHouseParty\"\r\n      :statesSenate=\"statesSenate\"\r\n      :statesHouse=\"statesHouse\"\r\n      :flagSort=\"flagSort\"\r\n    ></router-view>\r\n    <appfooter></appfooter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport appheader from \"./components/header.vue\";\r\nimport appfooter from \"./components/footer.vue\";\r\n\r\nexport default {\r\n  name: \"app\",\r\n  components: {\r\n    appheader,\r\n    appfooter\r\n  },\r\n  data() {\r\n    return {\r\n      membersSenate: \"\",\r\n      membersHouse: \"\",\r\n      statisticsSenate: {},\r\n      statisticsHouse: {},\r\n      leastMembersSenate: {},\r\n      mostMembersSenate: {},\r\n      leastMembersHouse: {},\r\n      mostMembersHouse: {},\r\n      leastMembersSenateParty: {},\r\n      mostMembersSenateParty: {},\r\n      leastMembersHouseParty: {},\r\n      mostMembersHouseParty: {},\r\n      statesSenate: {},\r\n      statesHouse: {},\r\n      statistics: {},\r\n      showBar: true,\r\n      loadBar: \"\",\r\n      flagSort: [{\r\n        flag: -1,\r\n        id: \"surname\",\r\n        up: \"fas fa-sort-alpha-up\",\r\n        down: \"fas fa-sort-alpha-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort-alpha-down\"\r\n      },\r\n      {\r\n        flag: 0,\r\n        id: \"name\",\r\n        up: \"fas fa-sort-alpha-up\",\r\n        down: \"fas fa-sort-alpha-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort\"\r\n      },\r\n      {\r\n        flag: 0,\r\n        id: \"party\",\r\n        up: \"fas fa-sort-alpha-up\",\r\n        down: \"fas fa-sort-alpha-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort\"\r\n      },\r\n      {\r\n        flag: 0,\r\n        id: \"state\",\r\n        up: \"fas fa-sort-alpha-up\",\r\n        down: \"fas fa-sort-alpha-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort\"\r\n      },\r\n      {\r\n        flag: 0,\r\n        id: \"seniority\",\r\n        up: \"fas fa-sort-numeric-up\",\r\n        down: \"fas fa-sort-numeric-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort\"\r\n      },\r\n      {\r\n        flag: 0,\r\n        id: \"percentage\",\r\n        up: \"fas fa-sort-numeric-up\",\r\n        down: \"fas fa-sort-numeric-down\",\r\n        no: \"fas fa-sort\",\r\n        arrow: \"fas fa-sort\"\r\n      }\r\n    ]};\r\n  },\r\n\r\n  created() {\r\n    this.readData();\r\n  },\r\n\r\n  methods: {\r\n    async readData() {\r\n      const decoder = new TextDecoder(\"utf-8\");\r\n      let response = await fetch(\r\n        \"https://api.propublica.org/congress/v1/113/senate/members.json\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\r\n          }\r\n        }\r\n      );\r\n      let length = response.headers.get(\"Content-Length\");\r\n      if (!length) {\r\n        // something was wrong with response, just give up\r\n        return await response.arrayBuffer();\r\n      }\r\n      let array = new Uint8Array(length);\r\n      let at = 0; // to index into the array\r\n      let reader = response.body.getReader();\r\n      for (;;) {\r\n        let { done, value } = await reader.read();\r\n        if (done) {\r\n          break;\r\n        }\r\n        array.set(value, at);\r\n        at += value.length;\r\n        let progBar = (at / length).toFixed(2) * 100;\r\n        this.showBar = progBar < 100;\r\n        this.loadBar = `\r\n            <div\r\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\r\n                 background: repeating-linear-gradient(\r\n                  45deg,\r\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\r\n          progBar}),\r\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\r\n          progBar}) 10px,\r\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\r\n          progBar}) 10px,\r\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\r\n          progBar}) 20px\r\n                ); color: white; text-align: center;\"\r\n              >\r\n                Loading...\r\n              </div>`;\r\n      }\r\n      let json = JSON.parse(decoder.decode(array));\r\n      this.membersSenate = json.results[0].members;\r\n      this.fillStatistics(this.membersSenate);\r\n      this.statisticsSenate = this.statistics;\r\n      this.leastMembersSenate = this.leastMembers;\r\n      this.mostMembersSenate = this.mostMembers.reverse();\r\n      this.leastMostParty(this.membersSenate);\r\n      this.leastMembersSenateParty = this.leastMembers;\r\n      this.mostMembersSenateParty = this.mostMembers.reverse();\r\n      this.createDropdown(this.membersSenate);\r\n      this.statesSenate = this.states;\r\n\r\n      response = await fetch(\r\n        \"https://api.propublica.org/congress/v1/113/house/members.json\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"X-API-Key\": \"WVbDG0ZYtQmlLL3xpisypjMqHwegu1M7WDrWXUGO\"\r\n          }\r\n        }\r\n      );\r\n      length = response.headers.get(\"Content-Length\");\r\n      if (!length) {\r\n        // something was wrong with response, just give up\r\n        return await response.arrayBuffer();\r\n      }\r\n      array = new Uint8Array(length);\r\n      at = 0; // to index into the array\r\n      reader = response.body.getReader();\r\n      for (;;) {\r\n        const { done, value } = await reader.read();\r\n        if (done) {\r\n          break;\r\n        }\r\n        array.set(value, at);\r\n        at += value.length;\r\n        let progBar = (at / length).toFixed(2) * 100;\r\n        this.showBar = progBar < 100;\r\n        this.loadBar = `\r\n            <div\r\n                style=\"width: ${progBar}%; height: 40px; padding-top: 5px;\r\n                 background: repeating-linear-gradient(\r\n                  45deg,\r\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\r\n          progBar}),\r\n                  rgb(${255 - 1.59 * progBar}, ${1.09 * progBar}, ${1.88 *\r\n          progBar}) 10px,\r\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\r\n          progBar}) 10px,\r\n                  rgb(${255 - 1.85 * progBar}, ${0.82 * progBar}, ${1.52 *\r\n          progBar}) 20px\r\n                ); color: white; text-align: center;\"\r\n              >\r\n                Loading...\r\n              </div>`;\r\n      }\r\n      json = JSON.parse(decoder.decode(array));\r\n      this.membersHouse = json.results[0].members;\r\n      this.fillStatistics(this.membersHouse);\r\n      this.statisticsHouse = this.statistics;\r\n      this.leastMembersHouse = this.leastMembers;\r\n      this.mostMembersHouse = this.mostMembers.reverse();\r\n      this.leastMostParty(this.membersHouse);\r\n      this.leastMembersHouseParty = this.leastMembers;\r\n      this.mostMembersHouseParty = this.mostMembers.reverse();\r\n      this.createDropdown(this.membersHouse);\r\n      this.statesHouse = this.states;\r\n    },\r\n\r\n    //Create the options for the states' dropdown filtering menu\r\n    createDropdown(members) {\r\n      this.states = [\r\n        ...new Set(members.map(member => member.state))\r\n      ].sort();\r\n      return this.states;\r\n    },\r\n\r\n    //Fill the arrays \"statistics\"\r\n    fillStatistics(members) {\r\n      this.statistics = {\r\n        NrOfDemo: 0,\r\n        NrOfRepu: 0,\r\n        NrOfInde: 0,\r\n        AvgOfDemo: 0,\r\n        AvgOfRepu: 0,\r\n        AvgOfInde: 0,\r\n        TotalReps: 0,\r\n        TotalPerc: 0\r\n      };\r\n      this.SumVotesD = 0;\r\n      this.SumVotesR = 0;\r\n      this.SumVotesI = 0;\r\n      members.forEach(person => {\r\n        switch (person.party) {\r\n          case \"D\":\r\n            this.statistics.NrOfDemo++;\r\n            this.SumVotesD += person.votes_with_party_pct;\r\n            break;\r\n          case \"R\":\r\n            this.statistics.NrOfRepu++;\r\n            this.SumVotesR += person.votes_with_party_pct;\r\n            break;\r\n          case \"I\":\r\n            this.statistics.NrOfInde++;\r\n            this.SumVotesI += person.votes_with_party_pct;\r\n            break;\r\n        }\r\n      });\r\n      this.statistics.AvgOfDemo =\r\n        this.statistics.NrOfDemo == 0\r\n          ? 0\r\n          : Math.round((this.SumVotesD / this.statistics.NrOfDemo) * 100) / 100;\r\n      this.statistics.AvgOfRepu =\r\n        this.statistics.NrOfRepu == 0\r\n          ? 0\r\n          : Math.round((this.SumVotesR / this.statistics.NrOfRepu) * 100) / 100;\r\n      this.statistics.AvgOfInde =\r\n        this.statistics.NrOfInde == 0\r\n          ? 0\r\n          : Math.round((this.SumVotesI / this.statistics.NrOfInde) * 100) / 100;\r\n      this.statistics.TotalReps =\r\n        this.statistics.NrOfDemo +\r\n        this.statistics.NrOfRepu +\r\n        this.statistics.NrOfInde;\r\n      this.statistics.TotalPerc =\r\n        Math.round(\r\n          ((this.SumVotesD + this.SumVotesR + this.SumVotesI) /\r\n            this.statistics.TotalReps) *\r\n            100\r\n        ) / 100;\r\n      //Create Least and Most arrays\r\n      let sortedMembers = members\r\n        .slice()\r\n        .sort((a, b) => a.missed_votes_pct - b.missed_votes_pct);\r\n      let len = sortedMembers.length;\r\n      let tenPercent = Math.round(len / 10) - 1;\r\n      let endLeast = tenPercent;\r\n      let endMost = len - 1 - tenPercent;\r\n      //Check for repetitive Least\r\n      let lastLeast = sortedMembers[tenPercent];\r\n      for (let f = tenPercent; f < len; f++) {\r\n        let nextLeast = sortedMembers[f];\r\n        if (nextLeast.missed_votes_pct === lastLeast.missed_votes_pct) {\r\n          endLeast++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      //Check for repetitive Most\r\n      let lastMost = sortedMembers[len - 1 - tenPercent];\r\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\r\n        let nextMost = sortedMembers[f];\r\n        if (nextMost.missed_votes_pct === lastMost.missed_votes_pct) {\r\n          endMost--;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      this.leastMembers = sortedMembers.slice(0, endLeast);\r\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\r\n      return [this.statistics, this.leastMembers, this.mostMembers];\r\n    },\r\n\r\n    //Create Least and Most for Party\r\n    leastMostParty(members) {\r\n      let sortedMembers = members\r\n        .slice()\r\n        .sort((a, b) => a.votes_with_party_pct - b.votes_with_party_pct);\r\n      let len = sortedMembers.length;\r\n      let tenPercent = Math.round(len / 10) - 1;\r\n      let endLeast = tenPercent;\r\n      let endMost = len - 1 - tenPercent;\r\n      //Check for repetitive Least\r\n      let lastLeast = sortedMembers[tenPercent];\r\n      for (let f = tenPercent; f < len; f++) {\r\n        let nextLeast = sortedMembers[f];\r\n        if (nextLeast.votes_with_party_pct === lastLeast.votes_with_party_pct) {\r\n          endLeast++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      //Check for repetitive Most\r\n      let lastMost = sortedMembers[len - 1 - tenPercent];\r\n      for (let f = len - 1 - tenPercent; f >= 0; f--) {\r\n        let nextMost = sortedMembers[f];\r\n        if (nextMost.votes_with_party_pct === lastMost.votes_with_party_pct) {\r\n          endMost--;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      this.leastMembers = sortedMembers.slice(0, endLeast);\r\n      this.mostMembers = sortedMembers.slice(endMost + 1, len);\r\n      return [this.leastMembers, this.mostMembers];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.col-8,\r\n.principale {\r\n  padding-top: 20px;\r\n}\r\ndiv > img {\r\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\r\n}\r\n.nav-link {\r\n  background-color: rgb(221, 221, 221);\r\n}\r\n.dropdown-item.router-link-exact-active {\r\n  color: white !important;\r\n  background-color: #007bff !important;\r\n}\r\n.centered,\r\nth:nth-child(n + 2),\r\ntd:nth-child(n + 2) {\r\n  text-align: center;\r\n}\r\n#Foot_at_Glance,\r\n.normal_foot {\r\n  background-color: rgb(134, 185, 255);\r\n  border-top: 2px black solid;\r\n}\r\n.normal_foot,\r\n.error_foot {\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n.error_foot {\r\n    background-color: rgb(230, 116, 116);\r\n}\r\nh2 {\r\n  font-size: 1.4rem !important;\r\n}\r\nh3 {\r\n  font-size: 1rem !important;\r\n}\r\nbutton,\r\nselect {\r\n  margin-bottom: 10px !important;\r\n}\r\n.fas,\r\nlabel,\r\ninput:hover {\r\n  cursor: pointer !important;\r\n}\r\ninput {\r\n  margin-left: 4px !important;\r\n  margin-right: 8px !important;\r\n\r\n}\r\n.fa-sort {\r\n  color: rgb(155, 155, 155) !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src"}]}